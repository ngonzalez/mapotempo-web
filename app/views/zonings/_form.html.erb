<%= twitter_bootstrap_form_for @zoning, layout: :horizontal do |f| %>
  <%= render 'shared/error_messages', model: @zoning %>
  <% if @planning %>
    <input id="planning_id" type="hidden" value="<%= @planning.id %>" name="planning_id">
  <% end %>
  <%= f.text_field :name %>
  <%= f.actions do %>
    <%= f.submit %>
  <% end %>
  <%
  if @zoning.id && (@isochrone_capability || @isodistance_capability || @planning) %>
    <div id="zoning_div_input" class="form-group">
      <div class="col-md-offset-2 col-md-6">
        <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-magic fa-fw"></i> <%= t '.generate' %> <span class="caret"></span></button>
        <ul class="dropdown-menu" role="menu">
          <% if @isochrone_capability %>
            <li><a data-toggle="modal" data-target="#isochrone-modal" href="#"><i class="fa fa-clock-o fa-fw"></i> <%= t '.isochrone' %></a></li>
          <% end %>
          <% if @isodistance_capability %>
            <li><a data-toggle="modal" data-target="#isodistance-modal" href="#"><i class="fa fa-road fa-fw"></i> <%= t '.isodistance' %></a></li>
          <% end %>
          <% if @planning %>
            <li class="divider"></li>
            <li><a href="#" id="from_planning"><i class="fa fa-calendar fa-fw"></i> <%= t '.from_planning' %></a></li>
            <li class="divider"></li>
            <% @zoning.customer.vehicles.size.times{ |n| %>
            <li><a href="#" class="automatic" data-n="<%= n + 1 %>"><i class="fa fa-magic fa-fw"></i> <%= t('.automatic', count: n + 1) %></a></li>
            <% } %>
          <% end %>
        </ul>
      </div>
    </div>
  <% end %>
  <div id="zones"></div>
<% end %>

<%
layers = (current_user.customer.profile.layers + [current_user.layer]).sort_by(&:id).uniq.collect{ |layer|
  {
    name: layer.name,
    url: request.ssl? ? layer.urlssl : layer.url,
    attribution: layer.map_attribution,
    default: layer == current_user.layer,
    overlay: layer.overlay
  }
}
controller.js(
  zoning_id: @zoning.id,
  planning_id: @planning ? @planning.id : nil,
  map_layers: Hash[layers.map{ |l| l[:name] }.zip(layers)],
  map_lat: (@planning && @planning.vehicle_usage_set.vehicle_usages.collect(&:default_store_start).find{ |s| s.lat }.lat) || @zoning.customer.default_position[:lat],
  map_lng: (@planning && @planning.vehicle_usage_set.vehicle_usages.collect(&:default_store_start).find{ |s| s.lng }.lng) || @zoning.customer.default_position[:lng],
  vehicles_array: @zoning.customer.vehicles.collect{ |vehicle|
    {id: vehicle.id, name: vehicle.name, color: vehicle.color}
  },
  vehicles_map: Hash[@zoning.customer.vehicles.collect{ |vehicle|
    [vehicle.id, {id: vehicle.id, name: vehicle.name, color: vehicle.color, capacity: vehicle.capacity}]
  }],
  show_capacity: @planning && !@planning.customer.enable_orders
)
%>
