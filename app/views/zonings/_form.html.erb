<% options = @zoning.id ? {layout: :horizontal, default_div_class: 'col-lg-10 col-md-10'} : {layout: :horizontal} %>
<%= twitter_bootstrap_form_for @zoning, options do |f| %>
  <%= render 'shared/error_messages', model: @zoning %>
  <% if @planning %>
    <input id="planning_id" type="hidden" value="<%= @planning.id %>" name="planning_id">
  <% end %>
  <%= f.text_field :name, required: true %>
  <%= f.actions do %>
    <%= f.submit %>
  <% end %>
  <% if @zoning.id %>
    <hr>
    <div class="form-group">
      <% if !@planning %>
        <div class="col-md-12">
        <label><input type="checkbox" name="all-destinations"> <%= t '.all_destinations' %> <i class="fa fa-lightbulb-o fa-fw" title="<%= t '.from_planning_help' %>"></i></label>
        </div>
      <% else %>
        <div class="col-md-12">
        <p class="help-block"><%= t('.stops_from_planning', s: @planning.name) %></p>
        </div>
      <% end %>
      <div class="col-md-offset-2 col-md-10">
        <button type="button" class="btn btn-primary dropdown-toggle" id="generate" data-toggle="dropdown" aria-expanded="false"<% if !@isochrone_capability && !@isodistance_capability && !@planning %> style="display: none;"<% end %>><i class="fa fa-magic fa-fw"></i> <%= t '.generate' %> <span class="caret"></span></button>
        <ul class="dropdown-menu" role="menu">
          <% if @isochrone_capability || @isodistance_capability %>
            <% if @isochrone_capability %>
              <li><a data-toggle="modal" data-target="#isochrone-modal" data-keyboard="true" href="#"><i class="fa fa-clock-o fa-fw"></i> <%= t '.isochrone' %></a></li>
            <% end %>
            <% if @isodistance_capability %>
              <li><a data-toggle="modal" data-target="#isodistance-modal" data-keyboard="true" href="#"><i class="fa fa-road fa-fw"></i> <%= t '.isodistance' %></a></li>
            <% end %>
            <li class="divider"></li>
          <% end %>
          <% if @planning %>
            <li><a href="#" id="from_planning"><i class="fa fa-calendar fa-fw"></i> <%= t '.from_planning' %></a></li>
            <li class="divider"></li>
          <% end %>
          <% zoning_vehicles(@zoning, @planning, active: true).count.times{ |n| %>
            <li><a href="#" class="automatic<% if !@planning %> disabled<% end %>" data-n="<%= n + 1 %>"><i class="fa fa-magic fa-fw"></i> <%= t('.automatic', count: n + 1) %></a></li>
          <% } %>
        </ul>
      </div>
    </div>
  <% end %>
  <div id="zones"></div>
<% end %>

<%
layers = (current_user.customer.profile.layers + [current_user.layer]).sort_by(&:id).uniq.collect{ |layer|
  {
    name: layer.name,
    url: request.ssl? ? layer.urlssl : layer.url,
    attribution: layer.map_attribution,
    default: layer == current_user.layer,
    overlay: layer.overlay
  }
}

controller.js(
  zoning_id: @zoning.id,
  zoning_details: zoning_details(@zoning),
  planning_id: @planning ? @planning.id : nil,
  map_layers: Hash[layers.map{ |l| l[:name] }.zip(layers)],
  map_lat: (@planning && @planning.vehicle_usage_set.vehicle_usages.active.collect(&:default_store_start).find{ |s| s.lat }.try(:lat)) || @zoning.customer.default_position[:lat],
  map_lng: (@planning && @planning.vehicle_usage_set.vehicle_usages.active.collect(&:default_store_start).find{ |s| s.lng }.try(:lng)) || @zoning.customer.default_position[:lng],
  vehicles_array: zoning_vehicles(@zoning, @planning, active: true).map{|vehicle| vehicle.slice(:id, :name, :color).merge(router_avoid_zones: vehicle.default_router.avoid_zones) },
  vehicles_map: zoning_vehicles(@zoning, @planning).each_with_object({}){|vehicle, hash| hash[vehicle.id] = vehicle.slice(:id, :name, :color, :capacity).merge(router_avoid_zones: vehicle.default_router.avoid_zones) },
  show_capacity: @planning && !@planning.customer.enable_orders
)
%>
